name: 'Deploy Docker Images'

on:
  push:
    branches:
      - main
    paths:
      - 'e2e-ci-poc/**'
      - '.github/workflows/deploy-images.yml'
      - '!**/README.md'

jobs:
  build-images:
    strategy:
      matrix:
        board: ['pi3', 'pi4']
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        working-directory: ./e2e-ci-poc
    steps:
      - name: 'Checkout the repository.'
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: 'Set up Docker Buildx'
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: 'Login to Docker Hub'
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: 'Define a variable for storing the shorthand commit hash.'
        run: |
          echo "GIT_SHORT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: 'Set the variables necessary for building and tagging Docker images.'
        run: |
          echo "DOCKER_TAG_1=latest-${{ matrix.board }}" >> $GITHUB_ENV
          echo "DOCKER_TAG_2=$GIT_SHORT_HASH-${{ matrix.board }}" >> $GITHUB_ENV
          echo "TARGET_PLATFORM=linux/arm/v7" >> $GITHUB_ENV
      - name: Display defined environment variables.
        run: |
          echo "GIT_SHORT_HASH: $GIT_SHORT_HASH"
          echo "DOCKER_TAG_1: $DOCKER_TAG_1"
          echo "DOCKER_TAG_2: $DOCKER_TAG_2"
          echo "matrix.board: ${{ matrix.board }}"
          echo "TARGET_PLATFORM: $TARGET_PLATFORM"
      - name: 'Build the Docker images.'
        run: |
          services=(
            base
            publisher
            subscriber
          )

          for container in ${services[@]}; do
            path=$(readlink -f "Dockerfile.${container}")

            if [[ ! -f "${path}" ]]; then
              continue
            fi

            echo "Building container [${container}] for ${{ matrix.board }}..."

            docker buildx build \
                --platform "${TARGET_PLATFORM}" \
                --output "type=image,push=true" \
                --build-arg "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
                -f "${path}" \
                -t "nicomiguelino/ci-ex-${container}:$DOCKER_TAG_1" \
                -t "nicomiguelino/ci-ex-${container}:$DOCKER_TAG_2" .
          done
      - name: 'Get details of the freshly-build Docker images.'
        run: |
          docker image ls
      - name: 'Prepare Balena file'
        run: |
          # Generate a docker-compose file for Balena with the correct board.
          mkdir -p balena-deploy

          # Generate the docker-compose file.
          cat docker-compose.balena.yml | \
            sed "s/BOARD_TAG/$DOCKER_TAG_2/" \
            > balena-deploy/docker-compose.yml
      - name: 'Inspect the Balena file.'
        run: |
          cat balena-deploy/docker-compose.yml
      - name: 'Display filesystem stats.'
        run: |
          ls -l
          pwd
          ls -l balena-deploy
      - name: 'Deploy images to Balena'
        uses: balena-io/deploy-to-balena-action@master
        id: build
        with:
          balena_token: ${{ secrets.BALENA_TOKEN }}
          fleet: gh_nicomiguelino/ci-ex-${{ matrix.board }}
          source: balena-deploy
